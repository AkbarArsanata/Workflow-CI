name: MLflow Churn Prediction Training and Docker Build

on:
  push:
    branches:
      - main

jobs:
  train_model_and_build_docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Conda Environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: 3.9
          environment-file: MLProject/conda.yaml
          activate-environment: mlflow_churn_env

      - name: Run MLflow Project and Get Run ID
        id: mlflow_run_step
        shell: bash -l {0}
        run: |
          mlflow run MLProject/ -e train_model

          # --- TANGKAP MLFLOW RUN ID DENGAN LEBIH ANDAL ---
          # Temukan folder run terbaru di mlruns/
          LATEST_RUN_DIR=$(find mlruns/ -maxdepth 2 -type d -name "????????????????????????????????" | sort -r | head -n 1)
          if [ -z "$LATEST_RUN_DIR" ]; then
            echo "Error: Could not find any MLflow run directory in mlruns/."
            exit 1
          fi
          # Ekstrak RUN_ID dari path direktori
          LATEST_RUN_ID=$(basename "$LATEST_RUN_DIR")
          echo "Detected MLflow Run ID: $LATEST_RUN_ID"
          echo "MLFLOW_RUN_ID=$LATEST_RUN_ID" >> $GITHUB_ENV
          # ------------------------------------------------

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Build and Push Docker Image
        shell: bash -l {0}
        run: |
          DOCKER_IMAGE_NAME="your-dockerhub-username/churn-prediction-model:latest" # Atau gunakan tag versi dinamis, misal: "v${{ github.run_number }}"

          echo "Building Docker image for MLflow Run ID: ${{ env.MLFLOW_RUN_ID }}"

          # Lakukan proses build Docker
          docker build -t "${DOCKER_IMAGE_NAME}" \
                       --build-arg MLFLOW_RUN_ID=${{ env.MLFLOW_RUN_ID }} \
                       ./MLProject # <-- Context build adalah folder MLProject/

          echo "Pushing Docker image to Docker Hub: ${DOCKER_IMAGE_NAME}"
          docker push "${DOCKER_IMAGE_NAME}"

      - name: Upload Confusion Matrix as GitHub Artifact
        uses: actions/upload-artifact@v4
        with:
          name: confusion-matrix-report
          path: confusion_matrix_Random_Forest_Classifier.csv

      - name: Upload MLflow Tracking Data (mlruns) as GitHub Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-tracking-data
          path: mlruns/
