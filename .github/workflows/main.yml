name: MLflow Churn Prediction Training

on:
  push:
    branches:
      - main

jobs:
  train_model:
    runs-on: ubuntu-latest
    outputs:
      run_id: ${{ steps.get_run_id.outputs.run_id }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Conda Environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: 3.9
          environment-file: MLProject/conda.yaml
          auto-activate-base: false
          activate-environment: mlflow_churn_env 

      - name: Configure MLflow Tracking (Optional)
        run: |
          set -e
          echo "Using local MLflow tracking (mlruns/ directory)."

      - name: Run MLflow Project
        run: |
          set -e
          rm -rf mlruns
          conda run -n mlflow_churn_env mlflow run MLProject/ -e train_model

      - name: Get Run ID from run_id.txt
        id: get_run_id
        run: |
          set -e
          if [ ! -f run_id.txt ]; then
            echo "run_id.txt not found!"
            exit 1
          fi
          run_id=$(cat run_id.txt)
          echo "Extracted Run ID: $run_id"
          echo "run_id=$run_id" >> $GITHUB_OUTPUT

  build_and_push_docker:
    runs-on: ubuntu-latest
    needs: train_model

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Conda Environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: 3.9
          environment-file: MLProject/conda.yaml
          auto-activate-base: false
          activate-environment: mlflow_churn_env

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Debug Run ID
        run: |
          echo "Run ID received: ${{ needs.train_model.outputs.run_id }}"

      - name: Build and Push MLflow Model Docker Image
        run: |
          set -e
          MLFLOW_RUN_ID="${{ needs.train_model.outputs.run_id }}"

          if [ -z "$MLFLOW_RUN_ID" ]; then
            echo "Error: Invalid MLflow Run ID"
            exit 1
          fi

          echo "Building Docker image from model at run ID: $MLFLOW_RUN_ID"

          # Step 1: Build Docker image from MLflow model
          conda run -n mlflow_churn_env mlflow models build-docker \
            --model-uri "runs:/$MLFLOW_RUN_ID/model" \
            --name churn-prediction-model

          # Step 2: Tag image for DockerHub
          docker tag churn-prediction-model:latest ibrahimakbararsanata/churn-prediction-model:latest

          # Step 3: Push image to DockerHub
          docker push ibrahimakbararsanata/churn-prediction-model:latest
