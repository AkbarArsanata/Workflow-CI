name: MLflow Churn Prediction Training and Docker Build # Nama workflow

on:
  push:
    branches:
      - main # Workflow terpicu setiap push ke cabang 'main'

jobs:
  train_model_and_build_docker: # Nama job
    runs-on: ubuntu-latest # Menggunakan runner Ubuntu terbaru dari GitHub

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4 # Mengkloning kode repositori

      - name: Set up Conda Environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: 3.9 # Pastikan versi ini cocok dengan di conda.yaml
          environment-file: MLProject/conda.yaml # Path relatif ke conda.yaml
          activate-environment: mlflow_churn_env # Mengaktifkan lingkungan Conda

      - name: Run MLflow Project and Get Run ID
        id: mlflow_run_step # ID untuk langkah ini agar bisa mengambil output
        shell: bash -l {0} # Menggunakan shell login untuk lingkungan Conda
        run: |
          # Jalankan proyek MLflow dari root repositori.
          # Ini akan membuat folder 'mlruns' di root repositori.
          mlflow run MLProject/ -e train_model

          # Tangkap MLflow Run ID terbaru dari folder 'mlruns'.
          # Ini penting untuk menunjuk model yang benar di Docker image.
          LATEST_RUN_DIR=$(find mlruns/ -maxdepth 2 -type d -name "????????????????????????????????" | sort -r | head -n 1)
          if [ -z "$LATEST_RUN_DIR" ]; then
            echo "Error: Could not find any MLflow run directory in mlruns/."
            exit 1
          fi
          LATEST_RUN_ID=$(basename "$LATEST_RUN_DIR")
          echo "Detected MLflow Run ID: $LATEST_RUN_ID"
          echo "MLFLOW_RUN_ID=$LATEST_RUN_ID" >> $GITHUB_ENV # Set variabel lingkungan untuk langkah selanjutnya

      - name: Docker Login
        uses: docker/login-action@v3 # Action untuk login ke Docker Hub
        with:
          username: ${{ secrets.DOCKER_USERNAME }} # Menggunakan GitHub Secret untuk username Docker Hub
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }} # Menggunakan GitHub Secret untuk access token Docker Hub

      - name: Build and Push Docker Image
        shell: bash -l {0}
        run: |
          # Nama image Docker yang akan di-push ke Docker Hub.
          # Menggunakan MLflow Run ID sebagai tag versi.
          DOCKER_IMAGE_NAME="your-dockerhub-username/churn-prediction-model:${{ env.MLFLOW_RUN_ID }}"

          echo "Building Docker image for MLflow Run ID: ${{ env.MLFLOW_RUN_ID }}"

          # Lakukan proses build Docker.
          # -t: untuk memberi tag pada image.
          # --build-arg: untuk meneruskan MLFLOW_RUN_ID ke Dockerfile.
          # -f MLProject/Dockerfile: menentukan lokasi Dockerfile.
          # .: konteks build adalah root repositori, sehingga mlruns dapat diakses.
          docker build -t "${DOCKER_IMAGE_NAME}" \
                       --build-arg MLFLOW_RUN_ID=${{ env.MLFLOW_RUN_ID }} \
                       -f MLProject/Dockerfile .

          echo "Pushing Docker image to Docker Hub: ${DOCKER_IMAGE_NAME}"
          docker push "${DOCKER_IMAGE_NAME}" # Mendorong image ke Docker Hub

      - name: Upload Confusion Matrix as GitHub Artifact
        uses: actions/upload-artifact@v4
        with:
          name: confusion-matrix-report
          path: confusion_matrix_Random_Forest_Classifier.csv # Path relatif ke root repo

      - name: Upload MLflow Tracking Data (mlruns) as GitHub Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-tracking-data
          path: mlruns/ # Path relatif ke root repo
