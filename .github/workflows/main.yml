name: MLflow Churn Prediction Training and Docker Build

on:
  push:
    branches:
      - main

jobs:
  train_model_and_build_docker: # Ubah nama job agar lebih deskriptif
    runs-on: ubuntu-latest

    env:
      # Definisi variabel lingkungan untuk Docker Hub (optional, bisa juga langsung di step)
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      # DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }} # Tidak perlu di env jika langsung di step login

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Conda Environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: 3.9
          environment-file: MLProject/conda.yaml
          activate-environment: mlflow_churn_env

      - name: Run MLflow Project
        id: mlflow_run_step # Tambahkan ID ke langkah ini untuk mendapatkan outputnya
        shell: bash -l {0}
        run: |
          # Perintah ini akan mencetak Run ID setelah selesai,
          # kita akan menangkapnya untuk langkah build-docker.
          # Pastikan logging di modelling.py jelas menampilkan Run ID atau tangkap dari output mlflow run
          mlflow run MLProject/ -e train_model

          # --- TANGKAP MLFLOW RUN ID ---
          # Ini adalah bagian KRUSIAL untuk mendapatkan ID run yang baru dibuat.
          # Kita asumsikan 'mlflow run' akan mencetak ID run di log.
          # Jika tidak, Anda perlu mencari cara lain untuk menangkapnya.
          # Misalnya, jika modelling.py mencetak "MLflow Run ID: <ID_RUN>", kita bisa parse itu.
          # Namun, mlflow run sendiri akan mencetak "Run (ID '...') ended with ..."
          # mari kita coba parse dari situ atau gunakan cara lain yang lebih langsung.

          # Cara paling handal: gunakan artifact 'mlruns' untuk mendapatkan ID run terbaru
          # Ini adalah solusi yang lebih baik dan konsisten.
          LATEST_RUN_ID=$(ls -td mlruns/*/* | head -1 | xargs basename)
          echo "MLFLOW_RUN_ID=$LATEST_RUN_ID" >> $GITHUB_ENV
          echo "Detected MLflow Run ID: $LATEST_RUN_ID"
          # ------------------------------

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Build and Push Docker Image with MLflow
        shell: bash -l {0}
        run: |
          # Ganti 'your-dockerhub-username' dengan username Docker Hub Anda
          # Ganti 'churn-prediction-model' dengan nama image yang Anda inginkan
          # 'v1.0.0' adalah tag versi image Anda
          # ${{ env.MLFLOW_RUN_ID }} adalah ID run MLflow yang kita tangkap sebelumnya
          DOCKER_IMAGE_NAME="your-dockerhub-username/churn-prediction-model:v1.0.0"
          echo "Building Docker image for MLflow Run ID: ${{ env.MLFLOW_RUN_ID }}"

          mlflow build-docker --model-uri "runs:/${{ env.MLFLOW_RUN_ID }}/model" \
                              --name "${DOCKER_IMAGE_NAME}"

          echo "Pushing Docker image to Docker Hub: ${DOCKER_IMAGE_NAME}"
          docker push "${DOCKER_IMAGE_NAME}"

      - name: Upload Confusion Matrix as GitHub Artifact
        uses: actions/upload-artifact@v4
        with:
          name: confusion-matrix-report
          path: confusion_matrix_Random_Forest_Classifier.csv

      - name: Upload MLflow Tracking Data (mlruns) as GitHub Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-tracking-data
          path: mlruns/
